{"version":3,"sources":["components/title-text/TitleText.js","components/quote-box/QuoteBox.js","components/buttons/Buttons.js","components/app/App.js","serviceWorker.js","index.js"],"names":["TitleText","props","id","className","QuoteBox","alt","src","Buttons","type","onClick","this","generateQuote","href","target","React","Component","App","state","quotesData","speaker","quote","image","quotesDataCopy","randomQuote","bind","length","setState","prevState","index","Math","floor","random","data","tempQuotesData","splice","$","animate","opacity","html","attr","encodeURIComponent","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75267c54.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst TitleText = (props) => {\r\n  return (\r\n    <div id=\"info\">\r\n        <h1 id=\"title\">Psychologist Quote Generator</h1>\r\n        <p id=\"sub-heading\">Expand your mind   <i id= \"brain\" className =\"fas fa-brain fa-3x\"></i></p>\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default TitleText;","import React from \"react\"\r\n\r\nconst QuoteBox = (props) => {\r\n  return (\r\n    <div id=\"quote-box\" className =\"container-fluid\">\r\n      <div id=\"quote-segment\">\r\n        <p id=\"text\"></p>\r\n        <p id=\"author\"></p>\r\n        <img id=\"photo\" alt=\"\" src=\"\"/>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default QuoteBox","import React from \"react\";\r\n\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(){\r\n    super();\r\n  }\r\n  render(){\r\n    return (\r\n    <div id=\"buttons-div\">\r\n       <button id=\"new-quote\" type=\"button\" className = \"btn btn-lg button\" onClick = {this.props.generateQuote}>Get More Insight</button>\r\n       <a href = \"\" target = \"_blank\" id=\"tweet-quote\"><i className= \"fab fa-twitter fa-6x\"></i></a> \r\n    </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default Buttons;","import React from 'react';\nimport TitleText from '../title-text/TitleText'\nimport QuoteBox from '../quote-box/QuoteBox'\nimport Buttons from '../buttons/Buttons'\nimport $ from 'jquery';\n\n\nclass App extends React.Component{\n  \n  constructor(){\n    super();\n    this.state = {\n      quotesData : [ {speaker: \"Abraham Maslow\", quote: \"If the only tool you have is a hammer, you tend to see every problem as a nail.\", image: \"https://upload.wikimedia.org/wikipedia/en/e/e0/Abraham_Maslow.jpg\"},\n  {speaker: \"William James\", quote: \"Everybody should do two things each day that he hates to do, just for practice.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9c/William_James_b1842c.jpg/330px-William_James_b1842c.jpg\"}, \n  {speaker: \"Carl Rogers\", quote: \"When I look at the world I'm pessimistic, but when I look at people I am optimistic.\", image: \"https://upload.wikimedia.org/wikipedia/en/3/36/Carlrogers.jpg\"},\n  {speaker: \"Carl Jung\", quote: \"Everything that irritates us about others can lead us to an understanding about ourselves.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/00/CGJung.jpg/440px-CGJung.jpg\"}, \n  {speaker: \"Sigmund Freud\", quote: \"Being entirely honest with oneself is a good exercise\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/36/Sigmund_Freud%2C_by_Max_Halberstadt_%28cropped%29.jpg/440px-Sigmund_Freud%2C_by_Max_Halberstadt_%28cropped%29.jpg\"},\n  {speaker: \"Mary Ainsworth\", quote: \"In hatred as in love, we grow like the things we brood upon. What we loathe, we graft into our very soul.\", image: \"http://www.feministvoices.com/assets/Women-Past/Ainsworth/Mary-Ainsworth-255x300.jpg\"},\n  {speaker: \"B.F. Skinner\", quote: \"A failure is not always a mistake, it is simply the best one can do under the circumstances. The real mistake is to stop trying.\", image:\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/B.F._Skinner_at_Harvard_circa_1950.jpg/440px-B.F._Skinner_at_Harvard_circa_1950.jpg\"},\n  {speaker: \"Albert Bandura\", quote: \"People's beliefs about their abilities have a profound effect on those abilities.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cc/Albert_Bandura_Psychologist.jpg/440px-Albert_Bandura_Psychologist.jpg\"}, \n  {speaker: \"Gordon Alport\", quote: \"So many tangles in life are ultimately hopeless that we have no appropriate sword other than laughter.\", image: \"https://upload.wikimedia.org/wikipedia/commons/9/97/Gordon_Allport.gif\"}, \n  {speaker: \"Anna Freud\", quote: \"I always thought about looking outside myself for strength and confidence but it comes from within. It is there all the time.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/4f/Anna_Freud_1957.jpg/440px-Anna_Freud_1957.jpg\"}, \n  {speaker: \"Melanie Klein\", quote: \"The highly ambitious person, in spite of all his successes, always remains dissatisfied, in the same way as a greedy baby in never satisfied.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0c/Melanie_Klein_1952.jpg/440px-Melanie_Klein_1952.jpg\"}, \n  {speaker: \"Ellen J. Langer\", quote: \"It is not primarily our physical selves that limit us, but rather our mindset about our physical limits.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/Ellen_Langer.jpg/440px-Ellen_Langer.jpg\"}, \n  {speaker: \"Jordan Peterson\", quote: \"Don't compare yourself with other people. Compare yourself with who you were yesterday.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Jordan_Peterson_June_2018.jpg/330px-Jordan_Peterson_June_2018.jpg\"  },\n  {speaker: \"Erik Erikson\", quote: \"The more you know yourself, the more patience you have for what you see in others\", image: \"https://upload.wikimedia.org/wikipedia/commons/a/a8/Erik_Erikson.png\"},\n  {speaker: \"Ablert Ellis\", quote: \"By not caring too much about what people think, I'm able to think for myself and propagate ideas which are very often unpopular. And I succeed.\", image: \"http://albertellis.org/wp-content/uploads/2018/02/Albert-Ellis-Color.jpg\"}, \n  {speaker: \"Paul Bloom\", quote: \"Love is a gross exaggeration of the difference between one person and everybody else.\", image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRvuyZEIiaeN-8TFth8s9qoP93nykObH5gMWAGX384VWuGhPDOT\"}, \n  {speaker: \"Joyce Brothers\", quote: \"A strong, positive self-image is the best possible preparation for success.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Joyce_Brothers_NYWTS.jpg/330px-Joyce_Brothers_NYWTS.jpg\"},\n  {speaker: \"Ivan Pavlov\", quote: \"Don't become a mere recorder of facts, but try to penetrate the mystery of their origin.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Ivan_Pavlov_NLM3.jpg/330px-Ivan_Pavlov_NLM3.jpg\"},\n  {speaker: \"Carol Gilligan\", quote: \"Speaking and listening are a form of psychic breathing.\", image: \"https://its.law.nyu.edu/facultyprofiles/photo_vertical/index.cfm?personid=19946\"},\n  {speaker: \"Daniel Kahneman\", quote: \"Our comforting conviction that the world makes sense rests on a secure foundation: our almost unlimited ability to ignore our ignorance\", image: \"https://upload.wikimedia.org/wikipedia/commons/c/c8/Daniel_KAHNEMAN.jpg\" },\n  {speaker: \"Eric Fromm\", quote: \"Love is the only sane and satisfactory answer to the problem of human existence\", image: \"https://images.gr-assets.com/authors/1221544425p5/8788.jpg\"},\n   {speaker: \"Warren Bennis\", quote: \"Becoming a leader is synonymous with becoming yourself. It is precisely that simple, and also that difficult.\", image: \"https://upload.wikimedia.org/wikipedia/en/e/e7/Warren_Bennis.jpg\" }, \n  {speaker: \"Alfred Adler\", quote: \"The chief danger in life is that you may take too many precautions\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/8f/Alfred_Adler_%281870-1937%29_Austrian_psychiatrist.jpg/330px-Alfred_Adler_%281870-1937%29_Austrian_psychiatrist.jpg\"},\n  {speaker: \"Rollo May\", quote: \"Everyone has a need for significance; and if we can't make that possible, or even probable, in our society, then it will be obtained in destructive ways.\", image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Rollo_May_USD_Alcal%C3%A1_1977.jpg/330px-Rollo_May_USD_Alcal%C3%A1_1977.jpg\"},\n  {speaker: \"Alice Miller\", quote: \"Wherever I look, I see signs of the commandment to honor one's parents and nowhere of a commandment that calls for the respect of a child.\", image: \"http://totallyhistory.com/wp-content/uploads/2014/01/Alice-Miller1.jpg\"}],\n        quotesDataCopy : []\n    }\n    this.randomQuote = this.randomQuote.bind(this);\n  \n  }\n  \n  randomQuote(){\n    let length = this.state.quotesData.length;\n   \n    if (length === 1){\n      this.setState(prevState => {return {quotesData: [...prevState.quotesDataCopy]}})\n      length = this.state.quotesData.length;\n    }\n   \n    let index = Math.floor(Math.random() * length);\n    let data = this.state.quotesData[index]\n    \n    this.setState( prevState => {\n      let tempQuotesData = prevState.quotesData;\n      tempQuotesData.splice(index, 1)\n      return{\n        quotesData: tempQuotesData\n      } \n    })\n \n    /*add a transition to the html changes*/\n     $(\"#text\").animate( {opacity: 0}, 300, \n     function(){\n     $('#text').animate({opacity: 1}, 300)\n     $('#text').html(\"<p><i className='fas fa-quote-left quote-icon'></i> \" +\n  data.quote +  \" <i className='fas fa-quote-right quote-icon'></i></p>\");\n    })\n\n    $(\"#author\").animate( {opacity: 0}, 300, \n     function(){\n     $('#author').animate({opacity: 1}, 300)\n     $('#author').html(\"&mdash; \" + data.speaker );\n    })\n\n    $(\"#photo\").animate( {opacity: 0}, 300, \n     function(){\n     $('#photo').animate({opacity: 1}, 300)\n     $('#photo').attr(\"src\", data.image);\n    })\n\n    $('#tweet-quote').attr(\"href\", 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(\n  \"'\" + data.quote + \"'  - \" + data.speaker))\n  }\n  \n  /* create a copy of the data to recover after modifying the data in order to avoid repeat quotes*/\n  componentDidMount(){\n    this.setState(prevState => {return {quotesDataCopy: [...prevState.quotesData]}})\n    this.randomQuote();\n  }\n  \n  render(){\n    return(\n      <div>\n        <TitleText/>\n        <QuoteBox/>\n        <Buttons generateQuote = {this.randomQuote}/>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}